/* ***** BEGIN LICENSE BLOCK *****
 * Version: MPL 1.1/GPL 2.0/LGPL 2.1
 *
 * The contents of this file are subject to the Mozilla Public License
 * Version 1.1 (the "MPL"); you may not use this file except in
 * compliance with the MPL. You may obtain a copy of the MPL at
 * http://www.mozilla.org/MPL/
 *
 * Software distributed under the MPL is distributed on an "AS IS" basis,
 * WITHOUT WARRANTY OF ANY KIND, either express or implied. See the MPL
 * for the specific language governing rights and limitations under the
 * MPL.
 *
 * The Original Code is Enigmail.
 *
 * The Initial Developer of the Original Code is
 * Ramalingam Saravanan <sarava@sarava.net>
 * Portions created by the Initial Developer are Copyright (C) 2002
 * the Initial Developer. All Rights Reserved.
 *
 * Contributor(s):
 * Patrick Brunschwig <patrick@enigmail.net>
 *
 * Alternatively, the contents of this file may be used under the terms of
 * either the GNU General Public License Version 2 or later (the "GPL"), or
 * the GNU Lesser General Public License Version 2.1 or later (the "LGPL"),
 * in which case the provisions of the GPL or the LGPL are applicable instead
 * of those above. If you wish to allow use of your version of this file only
 * under the terms of either the GPL or the LGPL, and not to allow others to
 * use your version of this file under the terms of the MPL, indicate your
 * decision by deleting the provisions above and replace them with the notice
 * and other provisions required by the GPL or the LGPL. If you do not delete
 * the provisions above, a recipient may use your version of this file under
 * the terms of any one of the MPL, the GPL or the LGPL.
 *
 * ***** END LICENSE BLOCK ***** */


#include "nsISupports.idl"

interface nsIDOMNode;

/**
 * EnigMime service
 */
[scriptable, uuid(847b3a40-7ab1-11d4-8f02-006008948af5)]
interface nsIEnigMimeService : nsISupports
{

  void init();
  readonly attribute boolean initialized;

  readonly attribute string version;

  AString getPlainText(in nsIDOMNode domNode, in wstring findStr);

  void sleep(in unsigned long miliSeconds);

  /**
   * Returns random number with specified number of digits,
   * in hexadecimal format.
   * CAUTION: This call uses the entropy source, which may cause the
   * calling thread to block until sufficient entropy is collected.
   */
  string getRandomHex(in unsigned long nDigits);

};

%{C++

#define NS_ENIGMIMESERVICE_CONTRACTID "@mozdev.org/enigmail/enigmimeservice;1"

#define NS_ENIGMIMESERVICE_CLASSNAME  "Enigmail Mime Service"

#define APPLICATION_XENIGMAIL_DUMMY "application/x-enigmail-dummy"

#define MULTIPART_ENCRYPTED "multipart/encrypted"

#define APPLICATION_PGP "application/pgp"

#define NS_ENIGDUMMYHANDLER_CONTRACTID "@mozilla.org/mimecth;1?type=" APPLICATION_XENIGMAIL_DUMMY

#define NS_ENIGENCRYPTEDHANDLER_CONTRACTID "@mozilla.org/mimecth;1?type=" MULTIPART_ENCRYPTED

#define NS_ENIGPGPHANDLER_CONTRACTID "@mozilla.org/mimecth;1?type=" APPLICATION_PGP

#define NS_ENIGCONTENTHANDLER_CLASSNAME  "Enigmail Content Handler"


#define NS_ENIGCONTENTHANDLERFACTORY_CONTRACTID "@mozilla.org/enigmail/contenthandler-factory;1"

#define NS_ENIGCONTENTHANDLERFACTORY_CLASSNAME "Enigmail Content Handler Factory"

#define NS_ENIGMIMESERVICE_CID                   \
{ /* 847b3a41-7ab1-11d4-8f02-006008948af5 */     \
   0x847b3a41, 0x7ab1, 0x11d4,                   \
{0x8f, 0x02, 0x00, 0x60, 0x08, 0x94, 0x8a, 0xf5} }

#define NS_ENIGCONTENTHANDLER_CID                \
{ /* 847b3a51-7ab1-11d4-8f02-006008948af5 */     \
   0x847b3a51, 0x7ab1, 0x11d4,                   \
{0x8f, 0x02, 0x00, 0x60, 0x08, 0x94, 0x8a, 0xf5} }

#define NS_ENIGCONTENTHANDLERFACTORY_CID         \
{ /* 847b3a52-7ab1-11d4-8f02-006008948af5 */     \
   0x847b3a52, 0x7ab1, 0x11d4,                   \
{0x8f, 0x02, 0x00, 0x60, 0x08, 0x94, 0x8a, 0xf5} }

%}

//////////////////////////////////////////////////////////////////////////////
